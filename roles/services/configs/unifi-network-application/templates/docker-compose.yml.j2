services:
  instance:
    # version: https://github.com/linuxserver/docker-unifi-network-application/releases/latest
    # docker tags: https://github.com/linuxserver/docker-unifi-network-application/pkgs/container/unifi-network-application/
    image: ghcr.io/linuxserver/unifi-network-application:9.3.45
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    env_file:
      - ./.env
    volumes:
      - config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp
      - 6789:6789
      - 5514:5514/udp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`unifi.${DOMAIN}`)"
      - "traefik.http.routers.unifi.entrypoints=websecure"
      - "traefik.http.routers.unifi.tls=true"
      - "traefik.http.routers.unifi.tls.certresolver=letsencrypt"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"
      - "traefik.http.services.unifi.loadbalancer.passhostheader=true"
      - "traefik.http.services.unifi.loadbalancer.serversTransport=https-proxy@file"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - internal
      - traefik

  database:
    # version: https://www.mongodb.com/docs/manual/release-notes/
    # docker tags: https://hub.docker.com/_/mongo/tags
    image: mongo:8.0.13
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - data:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - internal
      - backup

volumes:
  config: {}
  data: {}

networks:
  internal: {}
  traefik:
    external: true
  backup:
    external: true
