---
- name: Detect system environment
  include_tasks: detect_environment.yml

- name: System updates and packages
  block:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
      become: true
      become_method: sudo

    - name: Install essential packages
      apt:
        name: "{{ essential_packages }}"
        state: present
      when: ansible_os_family == "Debian"
      become: true
      become_method: sudo

    - name: Upgrade all packages (if requested)
      apt:
        upgrade: safe
        autoremove: yes
        autoclean: yes
      when: 
        - ansible_os_family == "Debian"
        - upgrade_system | default(false) | bool
      become: true
      become_method: sudo

- name: Docker installation and setup
  block:
    - name: Include Docker setup
      include_tasks: docker/docker.yml
      tags: docker
  become: true
  become_method: sudo

- name: Rootless user setup
  block:
    - name: Include rootless user setup
      include_tasks: rootless_user/rootless_user.yml
      tags: rootless_user

- name: Configure rootless Docker for selected user
  block:
    - name: Configure subuid and subgid for rootless user
      lineinfile:
        path: "{{ item }}"
        line: "{{ rootless_user_name }}:100000:65536"
        create: yes
        state: present
      loop:
        - /etc/subuid
        - /etc/subgid
      become: true
      become_method: sudo

    - name: Enable user lingering for rootless user
      command: "loginctl enable-linger {{ rootless_user_name }}"
      become: true
      become_method: sudo
      changed_when: true

    - name: Create Docker config directory for rootless user
      file:
        path: "{{ rootless_user_home }}/.config/docker"
        state: directory
        mode: "0755"
        owner: "{{ rootless_user_name }}"
        group: "{{ rootless_user_name }}"
      become: true
      become_method: sudo

    - name: Configure Docker daemon for rootless user
      copy:
        content: |
          {
            "log-driver": "local",
            "log-opts": {
              "max-size": "500m",
              "max-file": "60",
              "compress": "true"
            }
          }
        dest: "{{ rootless_user_home }}/.config/docker/daemon.json"
        mode: "0644"
        owner: "{{ rootless_user_name }}"
        group: "{{ rootless_user_name }}"
      become: true
      become_method: sudo

    - name: Display completion message
      debug:
        msg: |
          
          System Preparation Complete
          ═══════════════════════════════════════════════════════
          ✓ Docker installed and configured
          ✓ Rootless user configured: {{ rootless_user_name }}
          ✓ User permissions set up
          ✓ Docker daemon configured
          
          {{ reboot_message }}
      vars:
        reboot_message: >-
          {%- if enable_system_reboot -%}
          System will reboot automatically to complete setup
          {%- else -%}
          Manual reboot required to complete rootless Docker setup
          Run: sudo reboot
          
          After reboot, install rootless Docker with:
          curl -fsSL https://get.docker.com/rootless | sh
          {%- endif %}

    - name: Reboot system if requested (non-local connection)
      reboot:
        msg: "Rebooting for rootless Docker setup"
        reboot_timeout: 300
      become: true
      become_method: sudo
      when: 
        - enable_system_reboot | default(false) | bool
        - ansible_connection != 'local'

    - name: Display local reboot notice
      debug:
        msg: |
          ⚠️  Manual reboot required (local connection)
          Please run 'sudo reboot' manually to complete the rootless Docker setup.
          The Ansible playbook cannot automatically reboot when using local connection.
      when: 
        - enable_system_reboot | default(false) | bool
        - ansible_connection == 'local'
