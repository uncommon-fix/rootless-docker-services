---
- name: System updates and packages
  block:
  - name: Update package cache first
    apt:
      update_cache: yes
      cache_valid_time: 3600
    when: ansible_os_family == "Debian"
    retries: 3
    delay: 5
    become: true

  - name: Install essential packages
    apt:
      name: "{{ essential_packages }}"
      state: present
    when: ansible_os_family == "Debian"
    retries: 3
    delay: 5
    become: true

  - name: Upgrade all packages
    apt:
      upgrade: safe
      autoremove: yes
      autoclean: yes
      dpkg_options: 'force-confdef,force-confold'
    when: ansible_os_family == "Debian" and (upgrade_system | default(false))
    retries: 3
    delay: 10
    become: true
    async: 1800  # 30 minutes timeout
    poll: 30     # Check every 30 seconds

- name: Docker installation and setup
  become: true
  block:
    - name: Include Docker setup
      include_tasks: docker/docker.yml
      tags: docker

- name: Rootless user setup
  block:
    - name: Include rootless user setup
      include_tasks: rootless_user/rootless_user.yml
      tags: rootless_user

- name: Configure rootless Docker for selected user
  block:
    - name: Configure subuid and subgid for rootless user
      lineinfile:
        path: "{{ item }}"
        line: "{{ rootless_user_name }}:100000:65536"
        create: yes
        state: present
      loop:
        - /etc/subuid
        - /etc/subgid
      become: true

    - name: Enable user lingering for rootless user
      command: "loginctl enable-linger {{ rootless_user_name }}"
      become: true
      changed_when: true

    - name: Stop and disable system Docker services
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - docker.service
        - docker.socket
      become: true
      failed_when: false

    - name: Create Docker config directory for rootless user
      file:
        path: "{{ rootless_user_home }}/.config/docker"
        state: directory
        mode: "0755"
        owner: "{{ rootless_user_name }}"
        group: "{{ rootless_user_name }}"
      become: true

    - name: Configure Docker daemon for rootless user
      copy:
        content: |
          {
            "log-driver": "local",
            "log-opts": {
              "max-size": "500m",
              "max-file": "60",
              "compress": "true"
            }
          }
        dest: "{{ rootless_user_home }}/.config/docker/daemon.json"
        mode: "0644"
        owner: "{{ rootless_user_name }}"
        group: "{{ rootless_user_name }}"
      become: true

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Prompt for reboot
      pause:
        prompt: |

          Rootless Docker Configuration Complete
          ─────────────────────────────────────────────────
          The system needs to be rebooted to complete the setup.
          
          Would you like to reboot now? [y/N]
      register: reboot_choice
      when: reboot_required.stat.exists
      ignore_errors: true

    - name: Reboot system if requested
      reboot:
        msg: "Rebooting for rootless Docker setup"
        reboot_timeout: 300
      become: true
      when: reboot_choice.user_input | default('n') | lower in ['y', 'yes']

    - name: Display reboot notice
      debug:
        msg: |
          ⚠️  Manual reboot required
          Please run 'sudo reboot' to complete the rootless Docker setup.
      when: reboot_choice.user_input | default('n') | lower not in ['y', 'yes']
  when: rootless_user_name is defined
  tags: rootless_docker