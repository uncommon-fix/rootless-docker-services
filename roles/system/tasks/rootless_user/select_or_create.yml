---
- name: Get list of non-root users with home directories
  shell: |
    getent passwd | awk -F: '$3 >= 1000 && $3 < 65534 && $6 ~ /^\/home\// { print $1 ":" $5 ":" $6 }' | sort
  register: existing_users
  changed_when: false

- name: Parse existing users
  set_fact:
    user_list: "{{ existing_users.stdout_lines | map('split', ':') | list }}"
  when: existing_users.stdout_lines | length > 0

- name: Display available users
  debug:
    msg: |

      Available System Users
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      {% for user in user_list %}
      {{ loop.index }}. {{ user[0] }}{% if user[1] and user[1] != '' %} ({{ user[1] }}){% endif %} â†’ {{ user[2] }}
      {% endfor %}
  when: user_list is defined and user_list | length > 0

- name: Prompt for user selection when users exist
  pause:
    prompt: |

      ğŸ”§ Rootless User Selection
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      Choose an option:

      â€¢ Enter a number (1-{{ user_list | length }}) to select an existing user
      â€¢ Enter 'new' to create a new user

      Your choice
  register: user_choice
  when: user_list is defined and user_list | length > 0

- name: Prompt for new user when no users exist
  pause:
    prompt: |

      Create New User
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      No existing non-root users found on this system.

      Enter username for new user
  register: new_user_choice
  when: user_list is not defined or user_list | length == 0

- name: Prompt for new user details when 'new' is selected
  pause:
    prompt: |

      Create New User
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      Enter username for the new user
  register: new_user_choice
  when: user_choice is defined and user_choice.user_input is defined and user_choice.user_input | trim == 'new'

- name: Clean user input
  set_fact:
    clean_input: "{{ user_choice.user_input | trim }}"
  when: user_choice is defined and user_choice.user_input is defined

- name: Set selected existing user
  set_fact:
    rootless_user: "{{ user_list[clean_input | int - 1][0] }}"
  when: >
    clean_input is defined and 
    clean_input | int > 0 and 
    clean_input | int <= (user_list | length) and
    clean_input != 'new'

- name: Display selected user
  debug:
    msg: "âœ“ Selected existing user: {{ rootless_user }}"
  when: >
    clean_input is defined and 
    clean_input | int > 0 and 
    clean_input | int <= (user_list | length) and
    clean_input != 'new'

- name: Set username from new user choice
  set_fact:
    new_username: "{{ new_user_choice.user_input | trim }}"
  when: new_user_choice is defined and new_user_choice.user_input is defined

- name: Check if new username already exists
  shell: "getent passwd {{ new_username }}"
  register: user_exists_check
  failed_when: false
  changed_when: false
  when: new_username is defined

- name: Fail if username already exists
  fail:
    msg: |
      Error: User '{{ new_username }}' already exists
      Please run the playbook again and choose a different username.
  when: new_username is defined and user_exists_check.rc == 0

- name: Prompt for new user password
  pause:
    prompt: |

      Set Password
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      Enter password for new user '{{ new_username }}'
      (input will be hidden)
    echo: false
  register: new_user_password
  when: new_username is defined and (user_exists_check.rc is not defined or user_exists_check.rc != 0)

- name: Create new user
  user:
    name: "{{ new_username }}"
    password: "{{ new_user_password.user_input | password_hash('sha512') }}"
    groups: []
    shell: /bin/bash
    create_home: yes
    state: present
  when: new_username is defined and new_user_password is defined

- name: Set rootless user to newly created user
  set_fact:
    rootless_user: "{{ new_username }}"
  when: new_username is defined and new_user_password is defined

- name: Display created user
  debug:
    msg: "âœ“ Successfully created new user: {{ new_username }}"
  when: new_username is defined and new_user_password is defined
